{"version":3,"sources":["components/NavBar.js","components/Grid.js","utils/API.js","components/Card.js","pages/Search.js","pages/NoMatch.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","href","Container","children","Row","Col","title","axios","get","bookData","post","Card","props","src","image","alt","authors","description","link","onClick","saveSubmit","book","Search","useState","books","setBooks","searchBook","setSearchBook","handleSaveSubmit","API","volumeInfo","imageLinks","thumbnail","previewLink","onChange","event","value","target","name","placeholder","preventDefault","then","res","console","log","data","items","catch","err","length","map","id","NoMatch","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df2dd8c7.chunk.js","sourcesContent":["import React from \"react\";\n\n\nfunction NavBar() {\n  return (\n    <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">Google Books</a>\n\n      <ul>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/\">Search</a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/saved\">Saved</a>\n        </li>\n      </ul>\n\n    </nav>\n  )\n};\n\nexport default NavBar;\n","import React from 'react'\n\n\nexport function Container ({children}) {\n    return (\n        <div className=\"container\">\n        {children}\n    </div>\n    )\n}\n\nexport function Row ({children}) {\n    return (\n        <div className=\"col\">\n        {children}\n    </div>\n    )\n}\n\n\nexport function Col ({children}) {\n    return (\n        <div className=\"col\">\n        {children}\n    </div>\n    )\n}\n\n\n\n\n\n","import axios from \"axios\";\n\n\n  // Send request to google books to find searched book\n  export default {\n    getBooksByTitle: function(title) {\n        return  axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + title )\n           \n           \n        \n    },\n\n    \n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};","import React from 'react'\n\nfunction Card(props) {\n    return (\n\n        <div className=\"card mb-3\" >\n            <div className=\"row g-0\">\n                <div className=\"col-md-4\">\n                    <img src={props.image} alt=\"...\" />\n                </div>\n                <div className=\"col-md-12\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{props.title}</h5>\n                        <p className=\"card-text\">{props.authors}</p>\n                        <p className=\"card-text\">{props.description}</p>\n                        <p className=\"card-text\"></p><a href={props.link}>View Book</a>\n                        <button onClick={() => props.saveSubmit(props.book)} >Save Book</button>\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Card\n","import React, { useState } from 'react'\nimport { Col, Row, Container } from \"../components/Grid\"\nimport API from \"../utils/API\"\nimport Card from \"../components/Card\"\n\nfunction Search() {\n    const [books, setBooks] = useState([])\n    const [searchBook, setSearchBook] = useState(\"\")\n\n    //GET all books and set them to books state\n    function getBooks() {\n        API.getBooksByTitle(searchBook)\n            .then(res => {\n\n                console.log(res.data.items, \"book\")\n                setBooks(res.data.items)\n            })\n            .catch(err => console.log(err))\n    }\n\n    //handle change function and set value to setSearchBook\n    function handleChange(event) {\n        const { value } = event.target;\n        setSearchBook(value)\n    }\n\n    //handle search submit to use API once form is completed\n    function handleSearchSubmit(event) {\n        event.preventDefault();\n\n        if (searchBook) {\n            getBooks();\n        }\n    };\n\n    //retrieves from API the book data to save the book\n    function handleSaveSubmit(bookData) {\n        API.saveBook({\n            \n            title:bookData.volumeInfo.title ,\n            authors: bookData.volumeInfo.authors,\n            image:bookData.volumeInfo.imageLinks.thumbnail ,\n            description:bookData.volumeInfo.description ,\n            link:bookData.volumeInfo.previewLink \n        })\n    };\n\n\n\n    return (\n        <Container>\n            <Row>\n                <div className=\"jumbotron\">\n                    <h1>Google Books Search</h1>\n\n\n                </div>\n                <Col>\n                    <form>\n\n                        <input onChange={handleChange}\n                            name=\"title\"\n                            placeholder=\"search for books\">\n\n                        </input>\n                        <button onClick={handleSearchSubmit}>Search</button>\n                    </form>\n\n                </Col>\n\n                <Col>\n                    <div>\n                        <h2>Search Results</h2>\n                        {books.length > 0 ? books.map(book => {\n                            return (\n                                <Card key={book.volumeInfo.id}\n                                    title={book.volumeInfo.title}\n                                    authors={book.volumeInfo.authors}\n                                    image={ book.volumeInfo.imageLinks ?  book.volumeInfo.imageLinks.thumbnail : \"https://lh3.googleusercontent.com/proxy/BiRVR9qoYFvNBRAukXex3NUXOkeIypFR4B-YNlFlr52qFSJVAt7OUT-H0xbLampxRjYhLBLjIfHdkbUiG9W0qsXIKFScsiodyTA4-mKG7HhQCvaFrn3zTRjCWyJMSRYXrg\" }\n                                    description={book.volumeInfo.description}\n                                    link={book.volumeInfo.previewLink}\n                                    book={book}\n                                    saveSubmit={handleSaveSubmit}>\n                                </Card>\n\n                            )\n                        }) : \"book not found\"}\n\n\n\n\n                       \n                    </div>\n                </Col>\n\n\n            </Row>\n        </Container >\n    )\n}\n\nexport default Search\n","import React from 'react'\n\nfunction NoMatch() {\n    return (\n        <div>\n            No results found\n        </div>\n    )\n}\n\nexport default NoMatch\n","\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBar from './components/NavBar';\nimport Search from './pages/Search';\nimport NoMatch from './pages/NoMatch';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n        <NavBar />\n        <Switch>\n          <Route exact path = {[\"/\", \"/search\"]}>\n            <Search />\n            </Route>\n\n          <Route exact path = {[\"/\", \"/saved\"]}>\n          {/* call saved page */}\n          </Route>\n\n          <Route>\n            <NoMatch />\n          </Route>\n         \n        </Switch>\n        </div>\n      </Router>\n     \n \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}