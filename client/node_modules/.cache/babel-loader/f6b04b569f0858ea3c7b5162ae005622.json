{"ast":null,"code":"import axios from \"axios\";\nconst apiKey = \"AIzaSyB0lxcYSv2cZE7V8HuAcoAoD740nENDrQs\"; // Send request to google books to find searched book\n\nexport default {\n  getBooksByTitle: function (title) {\n    return new Promise((resolve, reject) => {\n      axios.get(\"https://www.googleapis.com/books/v1/volumes?q=$\" + title + \"&key=\" + apiKey).then(res => {\n        const bookResults = res.data.items;\n        const results = bookResults.map(book => {\n          const {\n            imageLinks = null\n          } = book.volumeInfo;\n          const thumbnail = imageLinks ? imageLinks.thumbnail : null;\n          return {\n            id: book.id,\n            title: book.volumeInfo.title,\n            authors: book.volumeInfo.authors,\n            description: book.volumeInfo.description,\n            image: thumbnail,\n            link: book.volumeInfo.previewLink\n          };\n        });\n        resolve(results);\n      }).catch(err => reject(err));\n    });\n  },\n  // Gets all books\n  getBooks: function () {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function (id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id);\n  } // // Saves a book to the database\n  // saveBook: function(bookData) {\n  //   return axios.post(\"/api/books\", bookData);\n  // }\n\n};","map":{"version":3,"sources":["/Users/jessicaparker/Northwestern-Bootcamp/react-learning/hw21-google-books/client/src/utils/API.js"],"names":["axios","apiKey","getBooksByTitle","title","Promise","resolve","reject","get","then","res","bookResults","data","items","results","map","book","imageLinks","volumeInfo","thumbnail","id","authors","description","image","link","previewLink","catch","err","getBooks","getBook","deleteBook","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,MAAM,GAAG,yCAAf,C,CAEE;;AACA,eAAe;AACbC,EAAAA,eAAe,EAAE,UAASC,KAAT,EAAgB;AAC7B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACxCN,MAAAA,KAAK,CACAO,GADL,CACS,oDAAoDJ,KAApD,GAA4D,OAA5D,GAAsEF,MAD/E,EAEKO,IAFL,CAEUC,GAAG,IAAI;AACb,cAAMC,WAAW,GAAGD,GAAG,CAACE,IAAJ,CAASC,KAA7B;AACA,cAAMC,OAAO,GAAGH,WAAW,CAACI,GAAZ,CAAgBC,IAAI,IAAI;AACpC,gBAAM;AAAEC,YAAAA,UAAU,GAAG;AAAf,cAAwBD,IAAI,CAACE,UAAnC;AAEA,gBAAMC,SAAS,GAAGF,UAAU,GAAGA,UAAU,CAACE,SAAd,GAA0B,IAAtD;AACA,iBAAO;AACHC,YAAAA,EAAE,EAAEJ,IAAI,CAACI,EADN;AAEHhB,YAAAA,KAAK,EAAEY,IAAI,CAACE,UAAL,CAAgBd,KAFpB;AAGHiB,YAAAA,OAAO,EAAEL,IAAI,CAACE,UAAL,CAAgBG,OAHtB;AAIHC,YAAAA,WAAW,EAAEN,IAAI,CAACE,UAAL,CAAgBI,WAJ1B;AAKHC,YAAAA,KAAK,EAAEJ,SALJ;AAMHK,YAAAA,IAAI,EAAER,IAAI,CAACE,UAAL,CAAgBO;AANnB,WAAP;AAQH,SAZe,CAAhB;AAaAnB,QAAAA,OAAO,CAACQ,OAAD,CAAP;AACC,OAlBL,EAmBKY,KAnBL,CAmBWC,GAAG,IAAIpB,MAAM,CAACoB,GAAD,CAnBxB;AAoBC,KArBM,CAAP;AAsBH,GAxBY;AA2Bf;AACAC,EAAAA,QAAQ,EAAE,YAAW;AACnB,WAAO3B,KAAK,CAACO,GAAN,CAAU,YAAV,CAAP;AACD,GA9Bc;AA+Bf;AACAqB,EAAAA,OAAO,EAAE,UAAST,EAAT,EAAa;AACpB,WAAOnB,KAAK,CAACO,GAAN,CAAU,gBAAgBY,EAA1B,CAAP;AACD,GAlCc;AAmCf;AACAU,EAAAA,UAAU,EAAE,UAASV,EAAT,EAAa;AACvB,WAAOnB,KAAK,CAAC8B,MAAN,CAAa,gBAAgBX,EAA7B,CAAP;AACD,GAtCc,CAuCf;AACA;AACA;AACA;;AA1Ce,CAAf","sourcesContent":["import axios from \"axios\";\nconst apiKey = \"AIzaSyB0lxcYSv2cZE7V8HuAcoAoD740nENDrQs\";\n\n  // Send request to google books to find searched book\n  export default {\n    getBooksByTitle: function(title) {\n        return new Promise((resolve, reject) => {\n        axios\n            .get(\"https://www.googleapis.com/books/v1/volumes?q=$\" + title + \"&key=\" + apiKey)\n            .then(res => {\n            const bookResults = res.data.items;\n            const results = bookResults.map(book => {\n                const { imageLinks = null } = book.volumeInfo\n\n                const thumbnail = imageLinks ? imageLinks.thumbnail : null\n                return {\n                    id: book.id,\n                    title: book.volumeInfo.title,\n                    authors: book.volumeInfo.authors,\n                    description: book.volumeInfo.description,\n                    image: thumbnail,\n                    link: book.volumeInfo.previewLink\n                };\n            });\n            resolve(results);\n            })\n            .catch(err => reject(err));\n        });\n    },\n\n    \n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // // Saves a book to the database\n  // saveBook: function(bookData) {\n  //   return axios.post(\"/api/books\", bookData);\n  // }\n};"]},"metadata":{},"sourceType":"module"}