{"ast":null,"code":"var _jsxFileName = \"/Users/jessicaparker/Northwestern-Bootcamp/react-learning/hw21-google-books/client/src/pages/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Col, Row, Container } from \"../components/Grid\";\nimport API from \"../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [searchBook, setSearchBook] = useState(\"\"); //GET all books and set them to books state\n\n  function getBooks() {\n    API.getBooksbyTitle(searchBook).then(res => {\n      setBooks(res);\n    }).catch(err => console.log(err));\n  } //handle change function\n  //handle search submit to use API once form is completed\n\n\n  function handleSearchSubmit(event) {\n    event.preventDefault();\n\n    if (searchBook) {\n      getBooks();\n    }\n  }\n\n  ; //retrieves from API the book data to save the book\n\n  function handleSubmit(bookData) {\n    API.saveBook({\n      _id: bookData.id,\n      title: bookData.title,\n      authors: bookData.authors,\n      description: bookData.description,\n      image: bookData.image,\n      link: bookData.link\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jumbotron\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Google Books Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            onChange: handleChange,\n            name: \"title\",\n            placeholder: \"1984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearchSubmit,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Search Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"key=\", book.id, \"title=\", book.title, \"authors=\", book.authors, \"image=\", book.image, \"description=\", book.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"OpVfIgwr/w9uLCdTXsAPhjrKeW0=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/jessicaparker/Northwestern-Bootcamp/react-learning/hw21-google-books/client/src/pages/Search.js"],"names":["React","useState","useEffect","Col","Row","Container","API","Search","books","setBooks","searchBook","setSearchBook","getBooks","getBooksbyTitle","then","res","catch","err","console","log","handleSearchSubmit","event","preventDefault","handleSubmit","bookData","saveBook","_id","id","title","authors","description","image","link","handleChange","book"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C,CAFc,CAId;;AACA,WAASW,QAAT,GAAqB;AACjBN,IAAAA,GAAG,CAACO,eAAJ,CAAoBH,UAApB,EACKI,IADL,CACUC,GAAG,IAAI;AACTN,MAAAA,QAAQ,CAACM,GAAD,CAAR;AACH,KAHL,EAIKC,KAJL,CAIWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;AAKH,GAXa,CAad;AAEA;;;AACA,WAASG,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIZ,UAAJ,EAAgB;AACZE,MAAAA,QAAQ;AACX;AACJ;;AAAA,GArBa,CAuBd;;AACA,WAASW,YAAT,CAAsBC,QAAtB,EAAgC;AAC5BlB,IAAAA,GAAG,CAACmB,QAAJ,CAAa;AACTC,MAAAA,GAAG,EAAEF,QAAQ,CAACG,EADL;AAETC,MAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAFP;AAGTC,MAAAA,OAAO,EAAEL,QAAQ,CAACK,OAHT;AAITC,MAAAA,WAAW,EAAEN,QAAQ,CAACM,WAJb;AAKTC,MAAAA,KAAK,EAAEP,QAAQ,CAACO,KALP;AAMTC,MAAAA,IAAI,EAAER,QAAQ,CAACQ;AANN,KAAb;AAQH;;AAAA;AAID,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,GAAD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,GAAD;AAAA,+BACI;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAEC,YAAjB;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,WAAW,EAAC;AAFhB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAQ,YAAA,OAAO,EAAEb,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAgBI,QAAC,GAAD;AAAA,+BACI,QAAC,IAAD;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,+BACOc,IAAI,CAACP,EADZ,YAESO,IAAI,CAACN,KAFd,cAGWM,IAAI,CAACL,OAHhB,YAISK,IAAI,CAACH,KAJd,kBAKeG,IAAI,CAACJ,WALpB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH;;GA7EQvB,M;;KAAAA,M;AA+ET,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Col, Row, Container } from \"../components/Grid\"\nimport API from \"../utils/API\"\n\nfunction Search() {\n    const [books, setBooks] = useState([])\n    const [searchBook, setSearchBook] = useState(\"\")\n\n    //GET all books and set them to books state\n    function getBooks () {\n        API.getBooksbyTitle(searchBook)\n            .then(res => {\n                setBooks(res)\n            })\n            .catch(err => console.log(err))\n    }\n\n    //handle change function\n\n    //handle search submit to use API once form is completed\n    function handleSearchSubmit(event) {\n        event.preventDefault();\n        if (searchBook) {\n            getBooks();\n        }\n    };\n\n    //retrieves from API the book data to save the book\n    function handleSubmit(bookData) {\n        API.saveBook({\n            _id: bookData.id,\n            title: bookData.title,\n            authors: bookData.authors,\n            description: bookData.description,\n            image: bookData.image,\n            link: bookData.link\n        })\n    };\n\n\n\n    return (\n        <Container>\n            <Row>\n                <div className=\"jumbotron\">\n                    <h1>Google Books Search</h1>\n\n                </div>\n                <Col>\n                    <form>\n                        <Input onChange={handleChange}\n                            name=\"title\"\n                            placeholder=\"1984\"\n                        />\n                        <button onClick={handleSearchSubmit}>Search</button>\n                    </form>\n\n                </Col>\n\n                <Col>\n                    <Card>\n                        <h2>Search Results</h2>\n \n\n                        <div>\n                          key={book.id}\n                          title={book.title}\n                          authors={book.authors}\n                          image={book.image}\n                          description={book.description}\n                        </div>\n\n\n                    {/* or no results found */}\n                    </Card>\n                </Col>\n\n\n            </Row>\n        </Container>\n    )\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}